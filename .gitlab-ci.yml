image: node:16.15.0-slim

stages:
 - test
 - build
 - deploy

variables:
  POSTGRES_DB: bad009-test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: postgres
  SERVER_HOST: 3.0.38.17
  SERVER_USER: ubuntu

test:
  stage: test
  services:
    - postgres:14.3-alpine
  artifacts:
    paths:
      - ./node_modules
  before_script:
    - yarn install
    - yarn knex migrate:latest --env test
    - yarn knex seed:run --env test

  script:
    - yarn test 

build:
  stage: build
  dependencies:
    - test
  artifacts:
    paths:
      - ./dist
  before_script:
    - mkdir dist
  script:
    - pwd
    - npm run build

deploy:
  stage: deploy
  only:
    - production
  image: ubuntu:20.04
  dependencies:
  - build
  before_script:
    - apt update
    - apt install --yes git openssh-client 
    - apt install rsync -y 
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/bad-project-key.pem
    - chmod 400 ~/.ssh/bad-project-key.pem
    - ssh-keyscan -H $SERVER_HOST > ~/.ssh/known_hosts
    - echo "Host bad-project" >> ~/.ssh/config
    - echo "  Hostname $SERVER_HOST" >> ~/.ssh/config
    - echo "  User $SERVER_USER" >> ~/.ssh/config
    - echo "  IdentityFile ~/.ssh/bad-project-key.pem " >> ~/.ssh/config
    - chmod 644 ~/.ssh/known_hosts

   


  script:
    - scp -r package.json "ubuntu@bad-project:~/badproject"
    - rsync -SavLP dist "ubuntu@bad-project:~/badproject"
    - rsync -SavLP public "ubuntu@bad-project:~/badproject/dist"
    - rsync -SavLP users "ubuntu@bad-project:~/badproject/dist"
    - ssh ubuntu@bad-project "
        cd ~/badproject &&
        npm i --prod &&
        cd dist &&
        npx knex migrate:latest  --env production &&
        forever restart ./server.js &&
        exit
       "
